server port   ///http://mobiarch.wordpress.com/2013/02/25/running-jboss-as-7-on-port-80/
server sandalone tiemout



sudo nautilus &

cd $JBOSS_HOME
cd ..
cp /home/svrwebuce/Desktop/portal/dcm/portal-ext.properties /opt/liferay-portal-6.2-ce-ga2

tinymce 
rm $JBOSS_HOME/standalone/deployments/ROOT.war/html/js/editor/tinymce.jsp
cp /home/svrwebuce/Desktop/portal/dcm/tinymce.jsp  $JBOSS_HOME/standalone/deployments/ROOT.war/html/js/editor/

look and feel
/opt/liferay-portal-6.2-ce-ga2/jboss-7.1.1/standalone/deployments/ROOT.war/WEB-INF
/opt/liferay-portal-6.2-ce-ga2/jboss-7.1.1/standalone/deployments/ROOT.war/html/themes/dcmtheme

layout
/opt/liferay-portal-6.2-ce-ga2/jboss-7.1.1/standalone/deployments/ROOT.war/layouttpl/custom


start server
 $JBOSS_HOME/bin/standalone.sh -b 0.0.0.0
test@liferay.com
10.2.4.8




C:\Users\dtic\Desktop\liferay\tomcat\webapps\ROOT\html\js\editor
/home/svrwebuce/Desktop/portal/dcm









##crear archivo portal-ext.properties en home
editor.wysiwyg.default=tinymce
editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_article_content.jsp=tinymce
editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_article_content_xsd_el.jsp=tinymce
editor.wysiwyg.portal-web.docroot.html.portlet.journal.edit_configuration.jsp=tinymce


##modificar D:\UCE_liferay\tm\tm\webapps\ROOT\html\js\editor\tinymce.jsp

<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 * 
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ include file="/html/taglib/init.jsp" %>

<%
String cssClass = GetterUtil.getString((String)request.getAttribute("liferay-ui:input-editor:cssClass"));
String editorImpl = (String)request.getAttribute("liferay-ui:input-editor:editorImpl");
String initMethod = (String)request.getAttribute("liferay-ui:input-editor:initMethod");
String name = namespace + GetterUtil.getString((String)request.getAttribute("liferay-ui:input-editor:name"));

String onChangeMethod = (String)request.getAttribute("liferay-ui:input-editor:onChangeMethod");

if (Validator.isNotNull(onChangeMethod)) {
	onChangeMethod = namespace + onChangeMethod;
}

boolean resizable = GetterUtil.getBoolean((String)request.getAttribute("liferay-ui:input-editor:resizable"));
boolean skipEditorLoading = GetterUtil.getBoolean((String)request.getAttribute("liferay-ui:input-editor:skipEditorLoading"));
%>

<c:if test="<%= !skipEditorLoading %>">
	<liferay-util:html-top outputKey="js_editor_tinymce">

		<%
		long javaScriptLastModified = ServletContextUtil.getLastModified(application, "/html/js/", true);
		%>

		<script src="<%= HtmlUtil.escape(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNHost() + themeDisplay.getPathJavaScript() + "/editor/tiny_mce/tiny_mce.js", javaScriptLastModified)) %>" type="text/javascript"></script>

		<script type="text/javascript">
			Liferay.namespace('EDITORS')['<%= editorImpl %>'] = true;
		</script>
	</liferay-util:html-top>
</c:if>

<div class="<%= cssClass %>">
	<textarea id="<%= name %>" name="<%= name %>" style="height: 100%; width: 100%;"></textarea>
</div>

<!--<aui:script>
	window['<%= name %>'] = {
		onChangeCallbackCounter: 0,

		destroy: function() {
			tinyMCE.editors['<%= name %>'].destroy();

			window['<%= name %>'] = null;
		},

		focus: function() {
			tinyMCE.editors['<%= name %>'].focus();
		},

		fileBrowserCallback: function(field_name, url, type) {
		},

		getHTML: function() {
			return tinyMCE.editors['<%= name %>'].getContent();
		},

		init: function(value) {
			if (typeof value != 'string') {
				value = '';
			}

			window['<%= name %>'].setHTML(value);
		},

		initInstanceCallback: function() {
			<c:if test="<%= Validator.isNotNull(initMethod) %>">
				window['<%= name %>'].init(<%= HtmlUtil.escape(namespace + initMethod) %>());
			</c:if>
		},

		<%
		if (Validator.isNotNull(onChangeMethod)) {
		%>

			onChangeCallback: function(tinyMCE) {

				// This purposely ignores the first callback event because each
				// call
				// to setContent triggers an undo level which fires the callback
				// when no changes have yet been made.

				// setContent is not really the correct way of initializing this
				// editor with content. The content should be placed statically
				// (from the editor's perspective) within the textarea. This is
				// a
				// problem from the portal's perspective because it's passing
				// the
				// content via a javascript method (initMethod).

				var onChangeCallbackCounter = window['<%= name %>'].onChangeCallbackCounter;

				if (onChangeCallbackCounter > 0) {

					<%= HtmlUtil.escapeJS(onChangeMethod) %>(window['<%= name %>'].getHTML());

				}

				onChangeCallbackCounter++;
			},

		<%
		}
		%>

		setHTML: function(value) {
			tinyMCE.editors['<%= name %>'].setContent(value);
		}
	};

	tinyMCE.init(
		{
			convert_urls: false,
			elements: '<%= name %>',
			extended_valid_elements: 'a[name|href|target|title|onclick|class|style],img[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name|usemap|onload],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style],*[*]',
			file_browser_callback: window['<%= name %>'].fileBrowserCallback,
			init_instance_callback: window['<%= name %>'].initInstanceCallback,
			invalid_elements: 'script',
			language: '<%= HtmlUtil.escape(locale.getLanguage()) %>',
			mode: 'exact',

			<%
			if (Validator.isNotNull(onChangeMethod)) {
			%>

				onchange_callback: window['<%= name %>'].onChangeCallback,

			<%
			}
			%>
			plugins: 'table,advhr,advimage,advlink,iespell,preview,media,searchreplace,print,contextmenu',
			relative_urls: false,
			remove_script_host: false,
			theme: 'advanced',
			theme_advanced_buttons1_add_before: 'mybutton,fontselect,fontsizeselect,forecolor,backcolor,separator',
			theme_advanced_buttons2_add: 'separator,media,advhr,separator,preview,print',
			theme_advanced_buttons2_add_before: 'cut,copy,paste,search,replace',
			theme_advanced_buttons3_add_before: 'tablecontrols,separator',
			theme_advanced_disable: 'formatselect,styleselect,help',
			theme_advanced_resize_horizontal: '<%= resizable %>',
			theme_advanced_toolbar_align: 'left',
			theme_advanced_toolbar_location: 'bottom',
verify_html: false,
cleanup: false,
valid_children : '*[*],a[div|span]',
setup : function(ed) {
        // Add a custom button
        ed.addButton('mybutton', {
            title : 'My button',
            image : '/html/js/editor/tiny_mce/plugins/example/img/example.gif',
            onclick : function() {
                

            	
            	 
                     $.Dialog({
                         overlay: true,
                         shadow: true,
                         flat: true,
                         draggable: true,
                         icon: '<img src="images/excel2013icon.png">',
                         title: 'Flat window',
                         content: '',
                         padding: 10,
                         onShow: function(_dialog){
                             var content = 
                                     '<label>Login</label>' +
                                     '<div class="input-control text"><input type="text" name="login" id="xhtmlm"><button class="btn-clear"></button></div>' +
                                     '<label>Password</label>'+
                                     '<div class="input-control password"><input type="password" name="password"><button class="btn-reveal"></button></div>' +
                                     '<div class="input-control checkbox"><label><input type="checkbox" name="c1" checked/><span class="check"></span>Check me out</label></div>'+
                                     '<div class="form-actions">' +
                                     '<button class="button primary" onclick="xxx();$.Dialog.close();">Login to...</button>&nbsp;'+
                                     '<button class="button" type="button" onclick="$.Dialog.close()">Cancel</button> '+
                                     '</div>'+
                                     '';

                             $.Dialog.title("User login");
                             $.Dialog.content(content);
                         }
                     });
                 
            	
            	
            	
            	
            	
            					 }
        });
					}
		
});
function xxx(){
	var htm=$('#xhtmlm').val();
	$('#<%= name %>_ifr').contents().find('#tinymce').html(htm);
alert(' mayra'+$('#xhtmlm').val());

	
}
</aui:script>-->


#modificar C:\Users\dtic\Desktop\liferay\tomcat\webapps\ROOT\html\portlet\dockbar/view.jsp


